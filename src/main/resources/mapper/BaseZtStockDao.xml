<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.example.springBootDemo.dao.mapper.BaseZtStockDao">
    <resultMap id="BaseResultMap" type="com.example.springBootDemo.entity.input.BaseZtStock">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="stock_code" jdbcType="CHAR" property="stockCode"/>
        <result column="stock_name" jdbcType="CHAR" property="stockName"/>
        <result column="plate" jdbcType="CHAR" property="plate"/>
        <result column="Main_business" jdbcType="CHAR" property="mainBusiness"/>
        <result column="Niche_business" jdbcType="CHAR" property="nicheBusiness"/>
        <result column="instructions" jdbcType="CHAR" property="instructions"/>
        <result column="combo" jdbcType="INTEGER" property="combo"/>
        <result column="harden_time" jdbcType="TIME" property="hardenTime"/>
        <result column="final_Harden_time" jdbcType="TIME" property="finalHardenTime"/>
        <result column="harden_type" jdbcType="CHAR" property="hardenType"/>
        <result column="reason" jdbcType="CHAR" property="reason"/>
        <result column="gains" jdbcType="REAL" property="gains"/>
        <result column="yesterday_gains" jdbcType="REAL" property="yesterdayGains"/>
        <result column="amplitude" jdbcType="REAL" property="amplitude"/>
        <result column="yesterday_amplitude" jdbcType="REAL" property="yesterdayAmplitude"/>
        <result column="changing_hands" jdbcType="REAL" property="changingHands"/>
        <result column="yesterday_changing_hands" jdbcType="REAL" property="yesterdayChangingHands"/>
        <result column="create_date" jdbcType="DATE" property="createDate"/>
        <result column="create_by" jdbcType="CHAR" property="createBy"/>
        <result column="modifed_date" jdbcType="DATE" property="modifedDate"/>
        <result column="modifed_by" jdbcType="CHAR" property="modifedBy"/>
        <result column="remark" jdbcType="CHAR" property="remark"/>
        <result column="circulation" jdbcType="INTEGER" property="circulation"/>
        <result column="entity_size" jdbcType="INTEGER" property="entitySize"/>
        <result column="yesteday_entity_size" jdbcType="INTEGER" property="yestedayEntitySize"/>
    </resultMap>

    <select id="getZtReportByDate" resultType="com.example.springBootDemo.entity.report.ZtReport"
            parameterType="java.lang.String">
        select
          zt.*,
          1 source,
          zb.entity_Size yestedayEntitySize,
          b.bond,b.bondInstructions,
           CASE WHEN cs.stock_code is not null THEN '次新;'
                 ELSE  ''
                  END AS cxFlag
        from base_zt_stock zt
        left join base_zb_stock zb on zt.stock_code = zb.stock_code and  zb.create_date = zt.create_date-1
        LEFT JOIN (
            SELECT
                b.stk_short_name,
                CASE
                    WHEN b2.id IS NOT NULL THEN CONCAT(b.bond_full_name,'|',b2.bond_full_name)
                    ELSE b.bond_full_name
                    END AS bond,
                CASE
                    WHEN b2.id IS NOT NULL THEN CONCAT(b.instructions,'|',b2.instructions)
                    ELSE b.instructions
                    END AS bondInstructions
            FROM base_bond b
                     LEFT JOIN base_bond b2 ON  b.stk_short_name = b2.stk_short_name AND b.ts_code !=b2.ts_code AND b.id >b2.id
        ) b on b.stk_short_name = zt.stock_name
        LEFT JOIN conf_stock cs ON cs.stock_code = zt.stock_code AND cs.attr LIKE '%次新%'
        where zt.create_date = #{date}
    </select>


    <select id="getMaxCombo" resultType="java.lang.Integer"
            parameterType="com.example.springBootDemo.entity.dto.QueryStockDto">
        select
            max(combo)
        from (
            select stock_Name,combo,create_date from base_zt_stock
            union
            select stock_Name,combo,create_date from base_zthf_stock
        ) a
        where create_date BETWEEN #{dto.startDate} and #{dto.endDate}
        AND stock_Name in
        <foreach collection="dto.stockNameList" item="item" open="(" close=")" separator=",">  
          #{item}  
        </foreach>
    </select>

    <select id="queryHighStock" resultType="com.example.springBootDemo.entity.input.BaseZtStock">
            select c.stock_name,c.combo ,c.main_business ,c.create_date from
            (
                select
                    stock_name,max(d.combo) combo
                from (
                    SELECT * FROM base_zt_stock
                    UNION
                    SELECT * FROM  base_zthf_stock
                ) d
                where create_date between #{startDate} and #{endDate}
                and combo>= #{combo}
                group by stock_name
            ) d
            INNER JOIN (
                SELECT * FROM base_zt_stock
                UNION
                SELECT * FROM  base_zthf_stock
            ) c ON c.`stock_name` = d.stock_name AND c.combo = d.combo
            where c.create_date between #{startDate} and #{endDate}
            order by combo desc
    </select>



    <select id="getRecentlyStock" resultType="com.example.springBootDemo.entity.base.BaseReportStock">
        select DISTINCT create_date,stock_name,stock_code,main_business,niche_business
        from (
            select *,
                   ROW_NUMBER() OVER (PARTITION BY stock_code ORDER BY stock_code,create_date desc) AS row_num
            from
            (
                SELECT create_date,stock_name,stock_code,main_business,niche_business FROM base_zt_stock 	WHERE create_date >=(SELECT  MAX(DATE) FROM conf_Date WHERE CURRENT_DATE()-10 >=DATE AND TYPE IN (0))
                UNION
                SELECT create_date,stock_name,stock_code,main_business,niche_business FROM base_zthf_stock 	WHERE create_date >=(SELECT  MAX(DATE) FROM conf_Date WHERE CURRENT_DATE()-10 >=DATE AND TYPE IN (0))
                UNION
                SELECT create_date,stock_name,stock_code,main_business,niche_business  FROM base_zb_stock 	WHERE create_date >=(SELECT  MAX(DATE) FROM conf_Date WHERE CURRENT_DATE()-10 >=DATE AND TYPE IN (0))
                UNION
                SELECT create_date,stock_name,stock_code,main_business,niche_business  FROM base_dt_stock 	WHERE create_date >=(SELECT  MAX(DATE) FROM conf_Date WHERE CURRENT_DATE()-10 >=DATE AND TYPE IN (0))
                UNION
                SELECT create_date,stock_name,stock_code,main_business,niche_business FROM base_bd_up_stock 	WHERE create_date >=(SELECT  MAX(DATE) FROM conf_Date WHERE CURRENT_DATE()-10 >=DATE AND TYPE IN (0))
                UNION
                SELECT create_date,stock_name,stock_code,main_business,niche_business FROM base_bd_down_stock 	WHERE create_date >=(SELECT  MAX(DATE) FROM conf_Date WHERE CURRENT_DATE()-10 >=DATE AND TYPE IN (0))

            ) bdd
            -- where stock_name = '三柏硕'
        ) a
        where a.row_num = 1
    </select>
</mapper>